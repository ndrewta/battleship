(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>a});var i=n(537),o=n.n(i),r=n(645),s=n.n(r)()(o());s.push([t.id,"body {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  min-width: 30vw;\n}\n\n.stats-container {\n  position: relative;\n  border: solid 1px black;\n  width: 300px;\n  height: 700px;\n}\n\n#players-div > p,\n#question-div > p,\n#info-div > p {\n  font-size: 20px;\n}\n\n#mode-select-div,\n#player-scores-div {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  padding-top: 150px;\n}\n\n#info-div {\n  text-align: center;\n  width: 150px;\n  height: 150px;\n}\n\n#btn-container,\n#player-container-btns {\n  display: flex;\n  justify-content: space-between;\n  width: 150px;\n}\n\nbutton {\n  width: 70px;\n  height: 40px;\n  font-size: 14px;\n  border-radius: 5px;\n  background-color: rgb(255, 255, 255);\n}\n\n.board {\n  font-size: 36px;\n  border: solid 1px;\n  width: 500px;\n  height: 500px;\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  grid-column-start: 2;\n  grid-row-start: 2;\n}\n\n#top-label {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-column-start: 2;\n  text-align: center;\n  height: 50px;\n  margin-top: 20px;\n}\n\n#left-label {\n  display: grid;\n  grid-template-rows: repeat(10, 1fr);\n  grid-row-start: 2;\n  text-align: center;\n}\n\n.content {\n  margin-bottom: 25px;\n  width: 575px;\n  display: grid;\n  grid-template-columns: 75px 500px;\n  grid-template-rows: 75px 500px;\n}\n\n.squares {\n  border: solid 1px;\n}\n\n.miss {\n  background-color: rgb(41, 37, 37);\n}\n\np {\n  pointer-events: none;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,mBAAmB;EACnB,mBAAmB;EACnB,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,uBAAuB;EACvB,YAAY;EACZ,aAAa;AACf;;AAEA;;;EAGE,eAAe;AACjB;;AAEA;;EAEE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,WAAW;EACX,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,aAAa;AACf;;AAEA;;EAEE,aAAa;EACb,8BAA8B;EAC9B,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,eAAe;EACf,kBAAkB;EAClB,oCAAoC;AACtC;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,YAAY;EACZ,aAAa;EACb,aAAa;EACb,sCAAsC;EACtC,mCAAmC;EACnC,oBAAoB;EACpB,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,sCAAsC;EACtC,oBAAoB;EACpB,kBAAkB;EAClB,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,mCAAmC;EACnC,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,mBAAmB;EACnB,YAAY;EACZ,aAAa;EACb,iCAAiC;EACjC,8BAA8B;AAChC;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,oBAAoB;AACtB",sourcesContent:["body {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  min-width: 30vw;\n}\n\n.stats-container {\n  position: relative;\n  border: solid 1px black;\n  width: 300px;\n  height: 700px;\n}\n\n#players-div > p,\n#question-div > p,\n#info-div > p {\n  font-size: 20px;\n}\n\n#mode-select-div,\n#player-scores-div {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  padding-top: 150px;\n}\n\n#info-div {\n  text-align: center;\n  width: 150px;\n  height: 150px;\n}\n\n#btn-container,\n#player-container-btns {\n  display: flex;\n  justify-content: space-between;\n  width: 150px;\n}\n\nbutton {\n  width: 70px;\n  height: 40px;\n  font-size: 14px;\n  border-radius: 5px;\n  background-color: rgb(255, 255, 255);\n}\n\n.board {\n  font-size: 36px;\n  border: solid 1px;\n  width: 500px;\n  height: 500px;\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  grid-column-start: 2;\n  grid-row-start: 2;\n}\n\n#top-label {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-column-start: 2;\n  text-align: center;\n  height: 50px;\n  margin-top: 20px;\n}\n\n#left-label {\n  display: grid;\n  grid-template-rows: repeat(10, 1fr);\n  grid-row-start: 2;\n  text-align: center;\n}\n\n.content {\n  margin-bottom: 25px;\n  width: 575px;\n  display: grid;\n  grid-template-columns: 75px 500px;\n  grid-template-rows: 75px 500px;\n}\n\n.squares {\n  border: solid 1px;\n}\n\n.miss {\n  background-color: rgb(41, 37, 37);\n}\n\np {\n  pointer-events: none;\n}\n"],sourceRoot:""}]);const a=s},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",i=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),i&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),i&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,i,o,r){"string"==typeof t&&(t=[[null,t,void 0]]);var s={};if(i)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(s[l]=!0)}for(var d=0;d<t.length;d++){var c=[].concat(t[d]);i&&s[c[0]]||(void 0!==r&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=r),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),r="/*# ".concat(o," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,i=0;i<e.length;i++)if(e[i].identifier===t){n=i;break}return n}function i(t,i){for(var r={},s=[],a=0;a<t.length;a++){var l=t[a],d=i.base?l[0]+i.base:l[0],c=r[d]||0,p="".concat(d," ").concat(c);r[d]=c+1;var u=n(p),h={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)e[u].references++,e[u].updater(h);else{var A=o(h,i);i.byIndex=a,e.splice(a,0,{identifier:p,updater:A,references:1})}s.push(p)}return s}function o(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,o){var r=i(t=t||[],o=o||{});return function(t){t=t||[];for(var s=0;s<r.length;s++){var a=n(r[s]);e[a].references--}for(var l=i(t,o),d=0;d<r.length;d++){var c=n(r[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}r=l}}},569:t=>{var e={};t.exports=function(t,n){var i=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var i="";n.supports&&(i+="@supports (".concat(n.supports,") {")),n.media&&(i+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(i+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),i+=n.css,o&&(i+="}"),n.media&&(i+="}"),n.supports&&(i+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(i,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},275:(t,e,n)=>{n.d(e,{Z:()=>o});var i=n(237);class o{constructor(t,e){this.owner=t,this.boardPosition=e,this.grid={},this.initGrid(this.length,this.width),this.sunkShips=0,this.shipSet=new Set,this.totalShips=0,this.selectedMoves=new Set,this.adjacentCoord=new Set,i.Z.subscribe("attack-grid",(t=>this.receiveAttack(t))),i.Z.subscribe("reset-values",(()=>this.resetValues())),i.Z.subscribe("cpu-attack",(t=>this.cpuAttack(t)))}resetValues(){this.shipSet=null,this.shipSet=new Set,this.grid={},this.initGrid(this.length,this.width),this.sunkShips=0,this.totalShips=0,this.selectedMoves=null,this.selectedMoves=new Set,this.adjacentCoord=null,this.adjacentCoord=new Set}initGrid(){for(let t=1;t<=10;t++){this.grid[t]={};for(let e=1;e<=10;e++)this.grid[t][e]={}}}generateCoords(){let t=Math.floor(10*Math.random())+1,e=Math.floor(10*Math.random())+1,n=Math.abs(t-e),i=[t,e];for(;n>4||0==n;)t=Math.floor(10*Math.random())+1,e=Math.floor(10*Math.random())+1,n=Math.abs(t-e);return i}placeShipDown(t,e,n){null==(e&&n)&&([e,n]=this.generateCoords()),n-t.length+1<=0&&(n+=Math.abs(n-t.length));let i=!1;for(let o=0;o<t.length;o++)if(this.grid[e][n-o].length){i=!0;break}if(i){const e=Math.floor(10*Math.random())+1;this.placeShipDown(t,e,n)}else{for(let i=0;i<t.length;i++)this.grid[e][n-i]=t;this.shipSet.add(t),this.totalShips+=1}}placeShipRight(t,e,n){null==(e&&n)&&([e,n]=this.generateCoords()),e+t.length-1>10&&(e-=e+t.length-11);let i=!1;for(let o=0;o<t.length;o++)if(this.grid[e+o][n].length){i=!0;break}if(i){const n=Math.floor(10*Math.random())+1;this.placeShipRight(t,e,n)}else{for(let i=0;i<t.length;i++)this.grid[e+i][n]=t;this.shipSet.add(t),this.totalShips+=1}}receiveAttack(t){const{x:e}=t,{y:n}=t,{owner:i}=t;if(i===this.boardPosition&&"hit"!=this.grid[e][n].status&&"miss"!=this.grid[e][n].status){if(0!==Object.values(this.grid[e][n]).length){this.grid[e][n].hit(),this.grid[e][n].isSunk();const i={status:"hit"};this.grid[e][n]=i,this.adjacentCoord.add({x:t.x,y:t.y})}else this.grid[e][n].status="miss";this.updateGrid(i),this.checkPlayerShips()}}checkPlayerShips(){return this.shipSet.forEach((t=>{1==t.sunk&&t.length==t.hits&&(this.sunkShips+=1,this.shipSet.delete(t))})),this.sunkShips==this.totalShips&&(i.Z.publish("game-over",this.boardPosition),!0)}updateGrid(t){const e={owner:this.owner,grid:this.grid,elem:t};i.Z.publish("update-board",e)}cpuMove(t=10,e=10){let n,i=!1,o=!1;const r=()=>{for(const t of this.adjacentCoord){let e={owner:"bot",x:t.x,y:t.y};if(t.x+1<=10&&(e.x=t.x+1,!a(e)))return e;if(t.x-1>0&&(e.x=t.x-1,!a(e)))return e;if(e.x=t.x,t.y+1<=10&&(e.y=t.y+1,!a(e)))return e;if(t.y-1>0&&(e.y=t.y-1,!a(e)))return e}},s=()=>{const n={owner:"bot"},i=Math.floor(Math.random()*t)+1,o=Math.floor(Math.random()*e)+1;return n.x=i,n.y=o,n},a=t=>{for(const e of this.selectedMoves)if(e.x===t.x&&e.y===t.y)return!0;return!1};if(!(this.selectedMoves.size>=100)){for(;!i;){let t;o||(o=!0,t=r()),null==t&&(t=s()),a(t)||(i=!0,n=t)}return this.selectedMoves.add(n),n}}cpuAttack(t){if(this.boardPosition==t){const t=this.cpuMove();this.receiveAttack(t)}}}},62:(t,e,n)=>{n.d(e,{Z:()=>i});class i{constructor(t){this.name=t}}},884:(t,e,n)=>{n.d(e,{Z:()=>i});class i{constructor(t){this.length=t,this.hits=0,this.sunk=!1,this.colour=`rgb(${256*Math.random()|0}, ${256*Math.random()|0}, ${256*Math.random()|0})`}hit(){this.hits+=1}isSunk(){return this.hits>=this.length&&(this.sunk=!0),this.sunk}}},341:(t,e,n)=>{n.d(e,{Z:()=>o});var i=n(237);function o(){const t=document.getElementsByClassName("container")[0];let e=d("top"),n=d("bot"),o=!0,r=!1,s=!1,a=!1,l=!1;function d(t){const e=document.createElement("div");e.setAttribute("class","content"),e.setAttribute("id",t);const n=document.createElement("div");n.setAttribute("class","board");for(let t=10;t>0;t--)for(let e=1;e<=10;e++){const i=document.createElement("div");i.setAttribute("class","squares"),i.setAttribute("data-x",e),i.setAttribute("data-y",t),n.appendChild(i)}const i=["A","B","C","D","E","F","G","H","I","J"],o=document.createElement("div");o.setAttribute("id","left-label");for(let t=0;t<10;t++){const e=document.createElement("p");e.textContent=i[t],o.appendChild(e)}const r=document.createElement("div");r.setAttribute("id","top-label");for(let t=1;t<=10;t++){const e=document.createElement("p");e.textContent=t,r.appendChild(e)}return e.appendChild(n),e.appendChild(o),e.appendChild(r),e}function c(){l?(e.style.pointerEvents="none",n.style.pointerEvents="auto",s?i.Z.publish("info-update","CPU's turn"):i.Z.publish("info-update","Top Player's turn"),a=!0,l=!1):a&&(e.style.pointerEvents="auto",n.style.pointerEvents="none",s?i.Z.publish("info-update","Your turn"):i.Z.publish("info-update","Bottom Player's turn"),a=!1,l=!0)}function p(){o=!0,e.style.pointerEvents="none",n.style.pointerEvents="none"}function u(){for(;t.firstChild;)t.removeChild(t.lastChild);e=d("top"),n=d("bot"),t.appendChild(e),t.appendChild(n)}function h(){o||(r=!1,i.Z.publish("cpu-attack","bot"))}t.appendChild(e),t.appendChild(n),t.addEventListener("click",(t=>{const e=t.target.parentElement.parentElement;if("top"==e.id){const e={owner:"top",x:Number(t.target.getAttribute("data-x")),y:Number(t.target.getAttribute("data-y"))};r=!0,i.Z.publish("attack-grid",e)}if("bot"==e.id&&0==s){const e={owner:"bot",x:Number(t.target.getAttribute("data-x")),y:Number(t.target.getAttribute("data-y"))};i.Z.publish("attack-grid",e)}})),p(),i.Z.subscribe("update-board",(function(t){const i=document.getElementById(t.elem),d=i.getElementsByClassName("board")[0];function p(t,e,n){for(const o of d.children){const r=o.getAttribute("data-x"),a=o.getAttribute("data-y");if(r==e&&a==n){if(t.length){if(s&&"top"==i.id)break;o.classList.add("ship"),o.setAttribute("colour",t.colour),o.style.backgroundColor=t.colour}"hit"==t.status&&(o.classList.add("hit"),o.style.backgroundColor="rgb(175, 129, 129)"),"miss"==t.status&&o.classList.add("miss")}}}for(let e=1;e<=10;e++)for(let n=1;n<=10;n++)p(t.grid[e][n],e,n);o||(s||function(){const t=Array.from(e.getElementsByClassName("ship")),i=Array.from(n.getElementsByClassName("ship"));e.style.pointerEvents="none",n.style.pointerEvents="none",t.forEach((t=>{t.classList.contains("hit")?t.classList.contains("hit")&&(t.style.backgroundColor="rgb(175, 129, 129)"):t.style.backgroundColor="white"})),i.forEach((t=>{t.classList.contains("hit")?t.classList.contains("hit")&&(t.style.backgroundColor="rgb(175, 129, 129)"):t.style.backgroundColor="white"})),setTimeout((()=>{l?(t.forEach((t=>{const e=t.getAttribute("colour");t.classList.contains("hit")||(t.style.backgroundColor=e)})),i.forEach((t=>{t.classList.contains("hit")||(t.style.backgroundColor="white")}))):a&&(t.forEach((t=>{t.classList.contains("hit")||(t.style.backgroundColor="white")})),i.forEach((t=>{const e=t.getAttribute("colour");t.classList.contains("hit")||(t.style.backgroundColor=e)}))),o||c()}),2e3)}(),s&&(c(),r&&setTimeout(h,800)))})),i.Z.subscribe("game-over",p),i.Z.subscribe("new-game",(function(){o=!1,r=!1,a=!1,l=!0,u()})),i.Z.subscribe("clear-board",u),i.Z.subscribe("cpu-on",(()=>{s=!0})),i.Z.subscribe("cpu-off",(()=>{s=!1}))}},237:(t,e,n)=>{n.d(e,{Z:()=>i});const i=function(){const t={};return{publish:function(e,n){Array.isArray(t[e])&&t[e].forEach((t=>{t(n)}))},subscribe:function(e,n){Array.isArray(t[e])||(t[e]=[]),t[e].push(n);const i=t[e].length-1;return{unsubscribe(){t[e].splice(i,1)}}}}}()},662:(t,e,n)=>{n.d(e,{Z:()=>o});var i=n(237);function o(){let t="Top player",e="Bottom player",n=0,o=0;const r=document.getElementsByClassName("stats-container")[0],s=document.createElement("div");s.setAttribute("id","player-scores-div");const a=document.createElement("div");a.setAttribute("id","players-div");const l=document.createElement("p");l.setAttribute("id","top-player"),l.textContent=`${t}: ${n}`;const d=document.createElement("p");d.setAttribute("id","bot-player"),d.textContent=`${e}: ${o}`,a.appendChild(l),a.appendChild(d),s.appendChild(a),r.appendChild(s);const c=document.createElement("div");c.setAttribute("id","mode-select-div");const p=document.createElement("div");p.setAttribute("id","question-div");const u=document.createElement("p");u.textContent="Verse CPU?",p.appendChild(u);const h=document.createElement("div");h.setAttribute("id","btn-container");const A=document.createElement("button");A.setAttribute("id","yes-btn"),A.textContent="Yes";const b=document.createElement("button");b.setAttribute("id","no-btn"),b.textContent="No",c.appendChild(p),h.appendChild(A),h.appendChild(b),c.appendChild(h),r.appendChild(c);const f=document.createElement("div");f.setAttribute("id","player-container-btns"),s.appendChild(f);const m=document.createElement("button");m.textContent="New Game",m.setAttribute("id","start-btn"),m.disabled=!0,f.appendChild(m);const g=document.createElement("button");g.setAttribute("id","reset-btn"),g.textContent="Reset",f.appendChild(g);const C=document.createElement("div");C.setAttribute("id","info-div"),s.appendChild(C);const E=document.createElement("p");function y(n){E.textContent="top"==n?`${e} won!`:"bot"==n?`${t} won!`:n}function v(){n=0,o=0,l.textContent=`${t}: ${n}`,d.textContent=`${e}: ${o}`}function x(){c.style.opacity=0,c.style.pointerEvents="none"}function w(){s.style.opacity=1,s.style.pointerEvents="auto"}function B(){s.style.opacity=0,s.style.pointerEvents="none"}return E.textContent="",C.appendChild(E),m.addEventListener("click",(()=>{m.disabled=!0,i.Z.publish("new-game")})),A.addEventListener("click",(()=>{i.Z.publish("cpu-on"),t="CPU",e="Player",x(),v(),w(),A.disabled=!0,b.disabled=!0,m.disabled=!1})),b.addEventListener("click",(()=>{i.Z.publish("cpu-off"),t="Top Player",e="Bottom Player",x(),v(),w(),A.disabled=!0,b.disabled=!0,m.disabled=!1})),g.addEventListener("click",(()=>{B(),c.style.opacity=1,c.style.pointerEvents="auto",v(),i.Z.publish("cpu-off"),i.Z.publish("clear-board"),E.textContent="",m.disabled=!0,A.disabled=!1,b.disabled=!1})),i.Z.subscribe("game-over",(function(i){y(i),function(i){"top"==i?(o+=1,d.textContent=`${e}: ${o}`):(n+=1,l.textContent=`${t}: ${n}`)}(i),m.disabled=!1})),i.Z.subscribe("info-update",y),B(),r}}},e={};function n(i){var o=e[i];if(void 0!==o)return o.exports;var r=e[i]={id:i,exports:{}};return t[i](r,r.exports,n),r.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{var t=n(379),e=n.n(t),i=n(795),o=n.n(i),r=n(569),s=n.n(r),a=n(565),l=n.n(a),d=n(216),c=n.n(d),p=n(589),u=n.n(p),h=n(426),A={};A.styleTagTransform=u(),A.setAttributes=l(),A.insert=s().bind(null,"head"),A.domAPI=o(),A.insertStyleElement=c(),e()(h.Z,A),h.Z&&h.Z.locals&&h.Z.locals;var b=n(341),f=n(62),m=n(275),g=n(884),C=n(662),E=n(237);(0,C.Z)(),(0,b.Z)();let y=new f.Z("PLAYER 1"),v=new f.Z("PLAYER 2"),x=new m.Z(y,"bot"),w=new m.Z(v,"top"),B=new g.Z,Z=new g.Z,k=new g.Z,S=new g.Z,M=new g.Z,j=new g.Z,L=new g.Z,P=new g.Z;E.Z.subscribe("new-game",(function(){B=null,Z=null,k=null,S=null,B=new g.Z(2),Z=new g.Z(3),k=new g.Z(4),S=new g.Z(4),M=null,j=null,L=null,P=null,M=new g.Z(2),j=new g.Z(3),L=new g.Z(4),P=new g.Z(4),E.Z.publish("reset-values"),x.placeShipDown(B),x.placeShipDown(Z),x.placeShipRight(k),x.placeShipRight(S),w.placeShipDown(M),w.placeShipDown(j),w.placeShipRight(L),w.placeShipRight(P),x.updateGrid("bot"),w.updateGrid("top")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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VyxLQUNYQyxFQUFXLEtBQ1hDLEVBQVcsS0FFWEgsRUFBVyxJQUFJbEgsRUFBQSxFQUFLLEdBQ3BCbUgsRUFBVyxJQUFJbkgsRUFBQSxFQUFLLEdBQ3BCb0gsRUFBVyxJQUFJcEgsRUFBQSxFQUFLLEdBQ3BCcUgsRUFBVyxJQUFJckgsRUFBQSxFQUFLLEdBRXBCLElBQUdsQixRQUFRLGdCQUdYOEgsRUFBZWxKLGNBQWNvSixHQUM3QkYsRUFBZWxKLGNBQWNxSixHQUM3QkgsRUFBZTdJLGVBQWVpSixHQUM5QkosRUFBZTdJLGVBQWVrSixHQUc5QkosRUFBZW5KLGNBQWN3SixHQUM3QkwsRUFBZW5KLGNBQWN5SixHQUM3Qk4sRUFBZTlJLGVBQWVxSixHQUM5QlAsRUFBZTlJLGVBQWVzSixHQUc5QlQsRUFBZXBJLFdBQVcsT0FDMUJxSSxFQUFlckksV0FBVyxNQUM1QixHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9HYW1lQm9hcmQuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9QbGF5ZXIuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9TaGlwLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvZ2FtZUJvYXJkTGF5b3V0LmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvcHViU3ViLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvc3RhdEJvYXJkLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGBib2R5IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1pbi13aWR0aDogMzB2dztcbn1cblxuLnN0YXRzLWNvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYm9yZGVyOiBzb2xpZCAxcHggYmxhY2s7XG4gIHdpZHRoOiAzMDBweDtcbiAgaGVpZ2h0OiA3MDBweDtcbn1cblxuI3BsYXllcnMtZGl2ID4gcCxcbiNxdWVzdGlvbi1kaXYgPiBwLFxuI2luZm8tZGl2ID4gcCB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuI21vZGUtc2VsZWN0LWRpdixcbiNwbGF5ZXItc2NvcmVzLWRpdiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwYWRkaW5nLXRvcDogMTUwcHg7XG59XG5cbiNpbmZvLWRpdiB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2lkdGg6IDE1MHB4O1xuICBoZWlnaHQ6IDE1MHB4O1xufVxuXG4jYnRuLWNvbnRhaW5lcixcbiNwbGF5ZXItY29udGFpbmVyLWJ0bnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHdpZHRoOiAxNTBweDtcbn1cblxuYnV0dG9uIHtcbiAgd2lkdGg6IDcwcHg7XG4gIGhlaWdodDogNDBweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDI1NSwgMjU1KTtcbn1cblxuLmJvYXJkIHtcbiAgZm9udC1zaXplOiAzNnB4O1xuICBib3JkZXI6IHNvbGlkIDFweDtcbiAgd2lkdGg6IDUwMHB4O1xuICBoZWlnaHQ6IDUwMHB4O1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMCwgMWZyKTtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMTAsIDFmcik7XG4gIGdyaWQtY29sdW1uLXN0YXJ0OiAyO1xuICBncmlkLXJvdy1zdGFydDogMjtcbn1cblxuI3RvcC1sYWJlbCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEwLCAxZnIpO1xuICBncmlkLWNvbHVtbi1zdGFydDogMjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBoZWlnaHQ6IDUwcHg7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG59XG5cbiNsZWZ0LWxhYmVsIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMTAsIDFmcik7XG4gIGdyaWQtcm93LXN0YXJ0OiAyO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5jb250ZW50IHtcbiAgbWFyZ2luLWJvdHRvbTogMjVweDtcbiAgd2lkdGg6IDU3NXB4O1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDc1cHggNTAwcHg7XG4gIGdyaWQtdGVtcGxhdGUtcm93czogNzVweCA1MDBweDtcbn1cblxuLnNxdWFyZXMge1xuICBib3JkZXI6IHNvbGlkIDFweDtcbn1cblxuLm1pc3Mge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNDEsIDM3LCAzNyk7XG59XG5cbnAge1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixlQUFlO0FBQ2pCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHVCQUF1QjtFQUN2QixZQUFZO0VBQ1osYUFBYTtBQUNmOztBQUVBOzs7RUFHRSxlQUFlO0FBQ2pCOztBQUVBOztFQUVFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sT0FBTztFQUNQLFdBQVc7RUFDWCxZQUFZO0VBQ1osa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixhQUFhO0FBQ2Y7O0FBRUE7O0VBRUUsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsb0NBQW9DO0FBQ3RDOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1osYUFBYTtFQUNiLGFBQWE7RUFDYixzQ0FBc0M7RUFDdEMsbUNBQW1DO0VBQ25DLG9CQUFvQjtFQUNwQixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0NBQXNDO0VBQ3RDLG9CQUFvQjtFQUNwQixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQ0FBbUM7RUFDbkMsaUJBQWlCO0VBQ2pCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osYUFBYTtFQUNiLGlDQUFpQztFQUNqQyw4QkFBOEI7QUFDaEM7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxpQ0FBaUM7QUFDbkM7O0FBRUE7RUFDRSxvQkFBb0I7QUFDdEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiYm9keSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIG1pbi13aWR0aDogMzB2dztcXG59XFxuXFxuLnN0YXRzLWNvbnRhaW5lciB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBib3JkZXI6IHNvbGlkIDFweCBibGFjaztcXG4gIHdpZHRoOiAzMDBweDtcXG4gIGhlaWdodDogNzAwcHg7XFxufVxcblxcbiNwbGF5ZXJzLWRpdiA+IHAsXFxuI3F1ZXN0aW9uLWRpdiA+IHAsXFxuI2luZm8tZGl2ID4gcCB7XFxuICBmb250LXNpemU6IDIwcHg7XFxufVxcblxcbiNtb2RlLXNlbGVjdC1kaXYsXFxuI3BsYXllci1zY29yZXMtZGl2IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogMDtcXG4gIGxlZnQ6IDA7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHBhZGRpbmctdG9wOiAxNTBweDtcXG59XFxuXFxuI2luZm8tZGl2IHtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIHdpZHRoOiAxNTBweDtcXG4gIGhlaWdodDogMTUwcHg7XFxufVxcblxcbiNidG4tY29udGFpbmVyLFxcbiNwbGF5ZXItY29udGFpbmVyLWJ0bnMge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIHdpZHRoOiAxNTBweDtcXG59XFxuXFxuYnV0dG9uIHtcXG4gIHdpZHRoOiA3MHB4O1xcbiAgaGVpZ2h0OiA0MHB4O1xcbiAgZm9udC1zaXplOiAxNHB4O1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpO1xcbn1cXG5cXG4uYm9hcmQge1xcbiAgZm9udC1zaXplOiAzNnB4O1xcbiAgYm9yZGVyOiBzb2xpZCAxcHg7XFxuICB3aWR0aDogNTAwcHg7XFxuICBoZWlnaHQ6IDUwMHB4O1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEwLCAxZnIpO1xcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMTAsIDFmcik7XFxuICBncmlkLWNvbHVtbi1zdGFydDogMjtcXG4gIGdyaWQtcm93LXN0YXJ0OiAyO1xcbn1cXG5cXG4jdG9wLWxhYmVsIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMCwgMWZyKTtcXG4gIGdyaWQtY29sdW1uLXN0YXJ0OiAyO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgaGVpZ2h0OiA1MHB4O1xcbiAgbWFyZ2luLXRvcDogMjBweDtcXG59XFxuXFxuI2xlZnQtbGFiZWwge1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDEwLCAxZnIpO1xcbiAgZ3JpZC1yb3ctc3RhcnQ6IDI7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbi5jb250ZW50IHtcXG4gIG1hcmdpbi1ib3R0b206IDI1cHg7XFxuICB3aWR0aDogNTc1cHg7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA3NXB4IDUwMHB4O1xcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA3NXB4IDUwMHB4O1xcbn1cXG5cXG4uc3F1YXJlcyB7XFxuICBib3JkZXI6IHNvbGlkIDFweDtcXG59XFxuXFxuLm1pc3Mge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDQxLCAzNywgMzcpO1xcbn1cXG5cXG5wIHtcXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLyogZXNsaW50LWRpc2FibGUgbm8tcmVzdHJpY3RlZC1zeW50YXggKi9cbmltcG9ydCBwcyBmcm9tIFwiLi9wdWJTdWJcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZUJvYXJkIHtcbiAgY29uc3RydWN0b3Iob3duZXIsIGJvYXJkUG9zaXRpb24pIHtcbiAgICB0aGlzLm93bmVyID0gb3duZXI7XG4gICAgdGhpcy5ib2FyZFBvc2l0aW9uID0gYm9hcmRQb3NpdGlvbjtcbiAgICB0aGlzLmdyaWQgPSB7fTtcbiAgICB0aGlzLmluaXRHcmlkKHRoaXMubGVuZ3RoLCB0aGlzLndpZHRoKTtcbiAgICB0aGlzLnN1bmtTaGlwcyA9IDA7XG4gICAgdGhpcy5zaGlwU2V0ID0gbmV3IFNldCgpO1xuICAgIHRoaXMudG90YWxTaGlwcyA9IDA7XG4gICAgdGhpcy5zZWxlY3RlZE1vdmVzID0gbmV3IFNldCgpO1xuICAgIHRoaXMuYWRqYWNlbnRDb29yZCA9IG5ldyBTZXQoKTtcbiAgICBwcy5zdWJzY3JpYmUoXCJhdHRhY2stZ3JpZFwiLCAoZSkgPT4gdGhpcy5yZWNlaXZlQXR0YWNrKGUpKTtcbiAgICBwcy5zdWJzY3JpYmUoXCJyZXNldC12YWx1ZXNcIiwgKCkgPT4gdGhpcy5yZXNldFZhbHVlcygpKTtcbiAgICBwcy5zdWJzY3JpYmUoXCJjcHUtYXR0YWNrXCIsIChlKSA9PiB0aGlzLmNwdUF0dGFjayhlKSk7XG4gIH1cblxuICByZXNldFZhbHVlcygpIHtcbiAgICAvLyBSZXNldCBzaGlwIHNldFxuICAgIHRoaXMuc2hpcFNldCA9IG51bGw7XG4gICAgdGhpcy5zaGlwU2V0ID0gbmV3IFNldCgpO1xuXG4gICAgLy8gUmVzZXQgZ3JpZFxuICAgIHRoaXMuZ3JpZCA9IHt9O1xuICAgIHRoaXMuaW5pdEdyaWQodGhpcy5sZW5ndGgsIHRoaXMud2lkdGgpO1xuXG4gICAgLy8gUmVzZXQgdmFyaWFibGVzXG4gICAgdGhpcy5zdW5rU2hpcHMgPSAwO1xuICAgIHRoaXMudG90YWxTaGlwcyA9IDA7XG4gICAgdGhpcy5zZWxlY3RlZE1vdmVzID0gbnVsbDtcbiAgICB0aGlzLnNlbGVjdGVkTW92ZXMgPSBuZXcgU2V0KCk7XG4gICAgdGhpcy5hZGphY2VudENvb3JkID0gbnVsbDtcbiAgICB0aGlzLmFkamFjZW50Q29vcmQgPSBuZXcgU2V0KCk7XG4gIH1cblxuICBpbml0R3JpZCgpIHtcbiAgICAvLyBDcmVhdGUgYSAxMHgxMCBncmlkXG4gICAgZm9yIChsZXQgeCA9IDE7IHggPD0gMTA7IHgrKykge1xuICAgICAgdGhpcy5ncmlkW3hdID0ge307XG4gICAgICBmb3IgKGxldCB5ID0gMTsgeSA8PSAxMDsgeSsrKSB7XG4gICAgICAgIHRoaXMuZ3JpZFt4XVt5XSA9IHt9O1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGdlbmVyYXRlQ29vcmRzKCkge1xuICAgIC8vIEdlbmVyYXRlIGNvb3JkaW5hdGVzXG4gICAgbGV0IG51bVggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCkgKyAxO1xuICAgIGxldCBudW1ZID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApICsgMTtcbiAgICBsZXQgYWJzRGlmZmVyZW5jZSA9IE1hdGguYWJzKG51bVggLSBudW1ZKTtcbiAgICBsZXQgY29vcmRpbmF0ZXMgPSBbbnVtWCwgbnVtWV07XG5cbiAgICB3aGlsZSAoYWJzRGlmZmVyZW5jZSA+IDQgfHwgYWJzRGlmZmVyZW5jZSA9PSAwKSB7XG4gICAgICBudW1YID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApICsgMTtcbiAgICAgIG51bVkgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCkgKyAxO1xuICAgICAgYWJzRGlmZmVyZW5jZSA9IE1hdGguYWJzKG51bVggLSBudW1ZKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY29vcmRpbmF0ZXM7XG4gIH1cblxuICBwbGFjZVNoaXBEb3duKHNoaXAsIHgsIHkpIHtcbiAgICAvLyBHZW5lcmF0ZSBjb29yZGluYXRlcyBpZiBudWxsXG4gICAgaWYgKCh4ICYmIHkpID09IG51bGwpIFt4LCB5XSA9IHRoaXMuZ2VuZXJhdGVDb29yZHMoKTtcblxuICAgIC8vIENoZWNrIGlmIHkgY29vcmRpbmF0ZSBpcyBvdXQgb2YgYm91bmRzXG4gICAgaWYgKHkgLSBzaGlwLmxlbmd0aCArIDEgPD0gMCkge1xuICAgICAgLy8gTW9kaWZ5IGNvb3JkaW5hdGVcbiAgICAgIHkgKz0gTWF0aC5hYnMoeSAtIHNoaXAubGVuZ3RoKTtcbiAgICB9XG5cbiAgICAvLyBDaGVjayBpZiBhbm90aGVyIHNoaXAgaGFzIG9jY3VwaWVkIHRoZSBzcXVhcmVcbiAgICBsZXQgb3ZlcmxhcCA9IGZhbHNlO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2hpcC5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKHRoaXMuZ3JpZFt4XVt5IC0gaV0ubGVuZ3RoKSB7XG4gICAgICAgIG92ZXJsYXAgPSB0cnVlO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBJZiBvdmVybGFwIHRoZW4gY2hhbmdlIHggY29vcmRpbmF0ZVxuICAgIGlmIChvdmVybGFwKSB7XG4gICAgICBjb25zdCBuZXdYID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApICsgMTtcbiAgICAgIHRoaXMucGxhY2VTaGlwRG93bihzaGlwLCBuZXdYLCB5KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBQbGFjZSBzaGlwIGRvd253YXJkc1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2hpcC5sZW5ndGg7IGkrKykge1xuICAgICAgdGhpcy5ncmlkW3hdW3kgLSBpXSA9IHNoaXA7XG4gICAgfVxuICAgIHRoaXMuc2hpcFNldC5hZGQoc2hpcCk7XG4gICAgdGhpcy50b3RhbFNoaXBzICs9IDE7XG4gIH1cblxuICBwbGFjZVNoaXBSaWdodChzaGlwLCB4LCB5KSB7XG4gICAgLy8gR2VuZXJhdGUgY29vcmRpbmF0ZXMgaWYgbnVsbFxuICAgIGlmICgoeCAmJiB5KSA9PSBudWxsKSBbeCwgeV0gPSB0aGlzLmdlbmVyYXRlQ29vcmRzKCk7XG5cbiAgICAvLyBDaGVjayBpZiB4IGNvb3JkaW5hdGUgaXMgb3V0IG9mIGJvdW5kc1xuICAgIGlmICh4ICsgc2hpcC5sZW5ndGggLSAxID4gMTApIHtcbiAgICAgIC8vIE1vZGlmeSBjb29yZGluYXRlXG4gICAgICB4IC09IHggKyBzaGlwLmxlbmd0aCAtIDExO1xuICAgIH1cblxuICAgIC8vIENoZWNrIGlmIGFub3RoZXIgc2hpcCBoYXMgb2NjdXBpZWQgdGhlIHNxdWFyZVxuICAgIGxldCBvdmVybGFwID0gZmFsc2U7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaGlwLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAodGhpcy5ncmlkW3ggKyBpXVt5XS5sZW5ndGgpIHtcbiAgICAgICAgb3ZlcmxhcCA9IHRydWU7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIElmIG92ZXJsYXAgdGhlbiBjaGFuZ2UgeCBjb29yZGluYXRlXG4gICAgaWYgKG92ZXJsYXApIHtcbiAgICAgIGNvbnN0IG5ld1kgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCkgKyAxO1xuICAgICAgdGhpcy5wbGFjZVNoaXBSaWdodChzaGlwLCB4LCBuZXdZKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBQbGFjZSBzaGlwIHJpZ2h0d2FyZHNcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNoaXAubGVuZ3RoOyBpKyspIHtcbiAgICAgIHRoaXMuZ3JpZFt4ICsgaV1beV0gPSBzaGlwO1xuICAgIH1cbiAgICB0aGlzLnNoaXBTZXQuYWRkKHNoaXApO1xuICAgIHRoaXMudG90YWxTaGlwcyArPSAxO1xuICB9XG5cbiAgcmVjZWl2ZUF0dGFjayhjb29yZCkge1xuICAgIGNvbnN0IHsgeCB9ID0gY29vcmQ7XG4gICAgY29uc3QgeyB5IH0gPSBjb29yZDtcbiAgICBjb25zdCB7IG93bmVyIH0gPSBjb29yZDtcbiAgICBpZiAob3duZXIgIT09IHRoaXMuYm9hcmRQb3NpdGlvbikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvLyBDaGVjayBpZiBhIGNvb3JkaW5hdGUgaGl0IG9yIG1pc3MgYSBzaGlwXG4gICAgaWYgKHRoaXMuZ3JpZFt4XVt5XS5zdGF0dXMgPT0gXCJoaXRcIiB8fCB0aGlzLmdyaWRbeF1beV0uc3RhdHVzID09IFwibWlzc1wiKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChPYmplY3QudmFsdWVzKHRoaXMuZ3JpZFt4XVt5XSkubGVuZ3RoICE9PSAwKSB7XG4gICAgICAvLyBDaGVjayBpZiBhbHJlYWR5IGhpdCBvciBtaXNzIHRoZW4gZG8gbm90aGluZ1xuICAgICAgLy8gc2hpcC5oaXRzICs9IDE7XG4gICAgICB0aGlzLmdyaWRbeF1beV0uaGl0KCk7XG4gICAgICB0aGlzLmdyaWRbeF1beV0uaXNTdW5rKCk7XG4gICAgICBjb25zdCBncmlkT2JqID0geyBzdGF0dXM6IFwiaGl0XCIgfTtcbiAgICAgIHRoaXMuZ3JpZFt4XVt5XSA9IGdyaWRPYmo7XG4gICAgICAvLyBBZGQgY29vcmRpbmF0ZSB0byBjaGVja0FkamFjZW50Q29vcmQgZm9yIEFJIGJlaGF2aW91clxuICAgICAgdGhpcy5hZGphY2VudENvb3JkLmFkZCh7IHg6IGNvb3JkLngsIHk6IGNvb3JkLnkgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZ3JpZFt4XVt5XS5zdGF0dXMgPSBcIm1pc3NcIjtcbiAgICB9XG4gICAgLy8gVXBkYXRlIGdyaWRcbiAgICAvLyBDaGVjayBwbGF5ZXIgc2hpcHMgc3RhdHVzXG4gICAgdGhpcy51cGRhdGVHcmlkKG93bmVyKTtcbiAgICB0aGlzLmNoZWNrUGxheWVyU2hpcHMoKTtcbiAgfVxuXG4gIGNoZWNrUGxheWVyU2hpcHMoKSB7XG4gICAgLy8gQ2hlY2sgaWYgc2hpcHMgc3VuayB0aGVuIHB1c2ggdG8gYXJyYXlcbiAgICB0aGlzLnNoaXBTZXQuZm9yRWFjaCgoc2hpcCkgPT4ge1xuICAgICAgaWYgKHNoaXAuc3VuayA9PSB0cnVlICYmIHNoaXAubGVuZ3RoID09IHNoaXAuaGl0cykge1xuICAgICAgICB0aGlzLnN1bmtTaGlwcyArPSAxO1xuICAgICAgICB0aGlzLnNoaXBTZXQuZGVsZXRlKHNoaXApO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gQ2hlY2sgaWYgbnVtYmVyIG9mIHN1bmsgc2hpcHMgaXMgZXF1YWwgdG8gbnVtYmVyIG9mIGFsbCBzaGlwcyBvbiBib2FyZFxuICAgIGlmICh0aGlzLnN1bmtTaGlwcyA9PSB0aGlzLnRvdGFsU2hpcHMpIHtcbiAgICAgIHBzLnB1Ymxpc2goXCJnYW1lLW92ZXJcIiwgdGhpcy5ib2FyZFBvc2l0aW9uKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB1cGRhdGVHcmlkKGVsZW0pIHtcbiAgICAvLyBQdWJsaXNoIHVwZGF0ZWQgZ3JpZCB2YWx1ZXNcbiAgICBjb25zdCBvYmogPSB7IG93bmVyOiB0aGlzLm93bmVyLCBncmlkOiB0aGlzLmdyaWQsIGVsZW0gfTtcbiAgICBwcy5wdWJsaXNoKFwidXBkYXRlLWJvYXJkXCIsIG9iaik7XG4gIH1cblxuICAvLyBBSSBsb2dpY1xuICBjcHVNb3ZlKHggPSAxMCwgeSA9IDEwKSB7XG4gICAgbGV0IHJldHVybk1vdmU7XG4gICAgbGV0IGRlY2lkZWRNb3ZlID0gZmFsc2U7XG4gICAgbGV0IGNoZWNrZWRBZGphY2VudE1vdmVzID0gZmFsc2U7XG5cbiAgICAvLyBjaGVjayBhZGphY2VudGNvb3JkIHNldCB3aXRoICstMSB4LHkuXG4gICAgLy8gdGhlbiBjcm9zcyBjaGVjayB0aGUgY29vcmQgd2l0aCBzZWxlY3RlZG1vdmVzIHNldFxuICAgIC8vIGlmIHRoYXQgYWRqYWNlbnQgY29vcmQgaXNudCBpbiBzZWxlY3RlZG1vdmVzIHRoZW4gcHJvY2VlZC5cbiAgICAvLyBvdGhlcndpc2UgaWYgdGhleSdyZSBhbGwgbWF0Y2hlZCB1cCBpbiBib3RoIHNldHNcbiAgICAvLyBjb250aW51ZSB0byBnZW5lcmF0ZSBhIHJhbmRvbSBjb29yZFxuXG4gICAgY29uc3QgY2hlY2tBZGphY2VudENvb3JkID0gKCkgPT4ge1xuICAgICAgLy8gQ2hlY2sgYWRqYWNlbnQgc3F1YXJlcyBvZiBwcmV2aW91cyBoaXRzXG4gICAgICBmb3IgKGNvbnN0IGNvb3JkIG9mIHRoaXMuYWRqYWNlbnRDb29yZCkge1xuICAgICAgICAvLyBDaGVjayBpZiB2YWxpZCBtb3ZlXG4gICAgICAgIGxldCB0ZW1wQ29vcmQgPSB7IG93bmVyOiBcImJvdFwiLCB4OiBjb29yZC54LCB5OiBjb29yZC55IH07XG5cbiAgICAgICAgLy8gQ2hlY2sgaWYgeCBpcyB2YWxpZCBhbmQgaXMgYXZhaWxhYmxlXG4gICAgICAgIGlmIChjb29yZC54ICsgMSA8PSAxMCkge1xuICAgICAgICAgIHRlbXBDb29yZC54ID0gY29vcmQueCArIDE7XG4gICAgICAgICAgaWYgKCFjaGVja01vdmVzKHRlbXBDb29yZCkpIHtcbiAgICAgICAgICAgIHJldHVybiB0ZW1wQ29vcmQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNvb3JkLnggLSAxID4gMCkge1xuICAgICAgICAgIHRlbXBDb29yZC54ID0gY29vcmQueCAtIDE7XG4gICAgICAgICAgaWYgKCFjaGVja01vdmVzKHRlbXBDb29yZCkpIHtcbiAgICAgICAgICAgIHJldHVybiB0ZW1wQ29vcmQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gUmVzZXQgdGVtcENvb3JkLnhcbiAgICAgICAgdGVtcENvb3JkLnggPSBjb29yZC54O1xuXG4gICAgICAgIGlmIChjb29yZC55ICsgMSA8PSAxMCkge1xuICAgICAgICAgIHRlbXBDb29yZC55ID0gY29vcmQueSArIDE7XG4gICAgICAgICAgaWYgKCFjaGVja01vdmVzKHRlbXBDb29yZCkpIHtcbiAgICAgICAgICAgIHJldHVybiB0ZW1wQ29vcmQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNvb3JkLnkgLSAxID4gMCkge1xuICAgICAgICAgIHRlbXBDb29yZC55ID0gY29vcmQueSAtIDE7XG4gICAgICAgICAgaWYgKCFjaGVja01vdmVzKHRlbXBDb29yZCkpIHtcbiAgICAgICAgICAgIHJldHVybiB0ZW1wQ29vcmQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIGNvbnN0IHJhbmRvbUNvb3JkID0gKCkgPT4ge1xuICAgICAgLy8gR2VuZXJhdGUgcmFuZG9tIGNvb3JkaW5hdGVzXG4gICAgICBjb25zdCBvYmogPSB7IG93bmVyOiBcImJvdFwiIH07XG4gICAgICBjb25zdCBjb29yZFggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB4KSArIDE7XG4gICAgICBjb25zdCBjb29yZFkgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB5KSArIDE7XG4gICAgICBvYmoueCA9IGNvb3JkWDtcbiAgICAgIG9iai55ID0gY29vcmRZO1xuICAgICAgcmV0dXJuIG9iajtcbiAgICB9O1xuXG4gICAgY29uc3QgY2hlY2tNb3ZlcyA9IChuZXdNb3ZlKSA9PiB7XG4gICAgICAvLyBDaGVjayBpZiBjb29yZGluYXRlcyBoYXZlIGJlZW4gc2VsZWN0ZWQgcHJldmlvdXNseVxuICAgICAgZm9yIChjb25zdCBtb3ZlIG9mIHRoaXMuc2VsZWN0ZWRNb3Zlcykge1xuICAgICAgICBpZiAobW92ZS54ID09PSBuZXdNb3ZlLnggJiYgbW92ZS55ID09PSBuZXdNb3ZlLnkpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH07XG5cbiAgICBpZiAodGhpcy5zZWxlY3RlZE1vdmVzLnNpemUgPj0gMTAwKSB7XG4gICAgICAvLyBJZiBhbGwgc3F1YXJlcyBoYXZlIGJlZW4gZmlsbGVkIHRoZW4gcmV0dXJuXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgd2hpbGUgKCFkZWNpZGVkTW92ZSkge1xuICAgICAgbGV0IG1vdmU7XG4gICAgICAvLyBFeGl0IGxvb3AgaWYgYWxsIG1vdmVzIGV4aGF1c3RlZFxuXG4gICAgICAvLyBJZiBhZGphY2VudCBtb3ZlIHRvIHByZXZpb3VzIG1vdmUgcG9vbCBmb3VuZCB0aGVuIHJldHVyblxuICAgICAgaWYgKCFjaGVja2VkQWRqYWNlbnRNb3Zlcykge1xuICAgICAgICBjaGVja2VkQWRqYWNlbnRNb3ZlcyA9IHRydWU7XG4gICAgICAgIG1vdmUgPSBjaGVja0FkamFjZW50Q29vcmQoKTtcbiAgICAgIH1cblxuICAgICAgLy8gQ29udGludWUgbG9vcGluZyB1bnRpbCBhIHVuaXF1ZSBjb29yZGluYXRlIGlzIGZvdW5kXG4gICAgICBpZiAobW92ZSA9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgbW92ZSA9IHJhbmRvbUNvb3JkKCk7XG4gICAgICB9XG5cbiAgICAgIGlmICghY2hlY2tNb3Zlcyhtb3ZlKSkge1xuICAgICAgICAvLyBJZiBtb3ZlIGhhcyBiZWVuIGZvdW5kIHRoZW4gcmV0dXJuIG1vdmVcbiAgICAgICAgZGVjaWRlZE1vdmUgPSB0cnVlO1xuICAgICAgICByZXR1cm5Nb3ZlID0gbW92ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLnNlbGVjdGVkTW92ZXMuYWRkKHJldHVybk1vdmUpO1xuXG4gICAgcmV0dXJuIHJldHVybk1vdmU7XG4gIH1cblxuICBjcHVBdHRhY2soYm9hcmRDaGVjaykge1xuICAgIGlmICh0aGlzLmJvYXJkUG9zaXRpb24gPT0gYm9hcmRDaGVjaykge1xuICAgICAgY29uc3QgbW92ZSA9IHRoaXMuY3B1TW92ZSgpO1xuICAgICAgdGhpcy5yZWNlaXZlQXR0YWNrKG1vdmUpO1xuICAgIH1cbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxheWVyIHtcbiAgY29uc3RydWN0b3IobmFtZSkge1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNoaXAge1xuICBjb25zdHJ1Y3RvcihsZW5ndGgpIHtcbiAgICB0aGlzLmxlbmd0aCA9IGxlbmd0aDtcbiAgICB0aGlzLmhpdHMgPSAwO1xuICAgIHRoaXMuc3VuayA9IGZhbHNlO1xuICAgIHRoaXMuY29sb3VyID0gYHJnYigkeyhNYXRoLnJhbmRvbSgpICogMjU2KSB8IDB9LCAke1xuICAgICAgKE1hdGgucmFuZG9tKCkgKiAyNTYpIHwgMFxuICAgIH0sICR7KE1hdGgucmFuZG9tKCkgKiAyNTYpIHwgMH0pYDtcbiAgfVxuXG4gIGhpdCgpIHtcbiAgICAvLyBDaGVjayBpZiBoaXRzID4gbGVuZ3RoXG4gICAgLy8gSGl0IHRhcmdldFxuICAgIHRoaXMuaGl0cyArPSAxO1xuICB9XG5cbiAgaXNTdW5rKCkge1xuICAgIC8vIENoZWNrIGlmIHNoaXAgaGl0cyA+PSBsZW5ndGggdGhlbiBpdCdzIHN1bmtcbiAgICBpZiAodGhpcy5oaXRzID49IHRoaXMubGVuZ3RoKSB7XG4gICAgICB0aGlzLnN1bmsgPSB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5zdW5rO1xuICB9XG59XG4iLCJpbXBvcnQgcHMgZnJvbSBcIi4vcHViU3ViXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZUJvYXJkKCkge1xuICAvLyBDcmVhdGUgZ2FtZSBjb250ZW50IGJvYXJkXG4gIGNvbnN0IGJvYXJkRGl2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImNvbnRhaW5lclwiKVswXTtcbiAgbGV0IHRvcEJvYXJkID0gZ2VuZXJhdGVCb2FyZChcInRvcFwiKTtcbiAgbGV0IGJvdEJvYXJkID0gZ2VuZXJhdGVCb2FyZChcImJvdFwiKTtcbiAgbGV0IGRpc2FibGVBbGxCb2FyZHMgPSB0cnVlO1xuICBsZXQgcGxheWVyTW92ZWQgPSBmYWxzZTtcbiAgbGV0IGNwdUFjdGl2ZSA9IGZhbHNlO1xuICBsZXQgdG9wQm9hcmRzVHVybiA9IGZhbHNlO1xuICBsZXQgYm90Qm9hcmRzVHVybiA9IGZhbHNlO1xuXG4gIGJvYXJkRGl2LmFwcGVuZENoaWxkKHRvcEJvYXJkKTtcbiAgYm9hcmREaXYuYXBwZW5kQ2hpbGQoYm90Qm9hcmQpO1xuXG4gIGZ1bmN0aW9uIGdlbmVyYXRlQm9hcmQoaWQpIHtcbiAgICAvLyBDcmVhdGUgYm9hcmRcbiAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcImNvbnRlbnRcIik7XG4gICAgY29udGFpbmVyLnNldEF0dHJpYnV0ZShcImlkXCIsIGlkKTtcbiAgICBjb25zdCBib2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgYm9hcmQuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJib2FyZFwiKTtcblxuICAgIC8vIENyZWF0ZSBzcXVhcmVzXG4gICAgZm9yIChsZXQgeSA9IDEwOyB5ID4gMDsgeS0tKSB7XG4gICAgICBmb3IgKGxldCB4ID0gMTsgeCA8PSAxMDsgeCsrKSB7XG4gICAgICAgIGNvbnN0IHNxdWFyZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIHNxdWFyZS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcInNxdWFyZXNcIik7XG4gICAgICAgIHNxdWFyZS5zZXRBdHRyaWJ1dGUoXCJkYXRhLXhcIiwgeCk7XG4gICAgICAgIHNxdWFyZS5zZXRBdHRyaWJ1dGUoXCJkYXRhLXlcIiwgeSk7XG4gICAgICAgIGJvYXJkLmFwcGVuZENoaWxkKHNxdWFyZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gQ3JlYXRlIGxhYmVsc1xuICAgIGNvbnN0IGxldHRlcnMgPSBbXCJBXCIsIFwiQlwiLCBcIkNcIiwgXCJEXCIsIFwiRVwiLCBcIkZcIiwgXCJHXCIsIFwiSFwiLCBcIklcIiwgXCJKXCJdO1xuICAgIGNvbnN0IGxlZnRMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgbGVmdExhYmVsLnNldEF0dHJpYnV0ZShcImlkXCIsIFwibGVmdC1sYWJlbFwiKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEwOyBpKyspIHtcbiAgICAgIGNvbnN0IGxldHRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICAgICAgbGV0dGVyLnRleHRDb250ZW50ID0gbGV0dGVyc1tpXTtcbiAgICAgIGxlZnRMYWJlbC5hcHBlbmRDaGlsZChsZXR0ZXIpO1xuICAgIH1cbiAgICBjb25zdCB0b3BMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgdG9wTGFiZWwuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJ0b3AtbGFiZWxcIik7XG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gMTA7IGkrKykge1xuICAgICAgY29uc3QgbnVtYmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gICAgICBudW1iZXIudGV4dENvbnRlbnQgPSBpO1xuICAgICAgdG9wTGFiZWwuYXBwZW5kQ2hpbGQobnVtYmVyKTtcbiAgICB9XG5cbiAgICAvLyBBcHBlbmQgb2JqZWN0cyB0byB0b3AgYm9hcmRcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoYm9hcmQpO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChsZWZ0TGFiZWwpO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh0b3BMYWJlbCk7XG5cbiAgICByZXR1cm4gY29udGFpbmVyO1xuICB9XG5cbiAgZnVuY3Rpb24gdXBkYXRlQm9hcmQob2JqKSB7XG4gICAgLy8gVXBkYXRlIGJvYXJkIGVsZW1lbnRzXG5cbiAgICBjb25zdCBjb250ZW50RWxlbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG9iai5lbGVtKTtcbiAgICBjb25zdCBib2FyZEVsZW0gPSBjb250ZW50RWxlbS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiYm9hcmRcIilbMF07XG5cbiAgICBmdW5jdGlvbiB1cGRhdGVDb29yZGluYXRlKG9iaiwgeCwgeSkge1xuICAgICAgLy8gVXBkYXRlIGNvb3JkaW5hdGUgd2l0aCBvYmpcbiAgICAgIGZvciAoY29uc3Qgbm9kZSBvZiBib2FyZEVsZW0uY2hpbGRyZW4pIHtcbiAgICAgICAgY29uc3QgZGF0YVggPSBub2RlLmdldEF0dHJpYnV0ZShcImRhdGEteFwiKTtcbiAgICAgICAgY29uc3QgZGF0YVkgPSBub2RlLmdldEF0dHJpYnV0ZShcImRhdGEteVwiKTtcblxuICAgICAgICBpZiAoZGF0YVggPT0geCAmJiBkYXRhWSA9PSB5KSB7XG4gICAgICAgICAgLy8gQXBwZW5kIG9iaiBkYXRhIHRvIHRoZSBzcXVhcmVzIHdpdGggY2xhc3Nlc1xuXG4gICAgICAgICAgaWYgKG9iai5sZW5ndGgpIHtcbiAgICAgICAgICAgIC8vIElmIEFJIGFjdGl2ZSB0aGVuIGhpZGUgdG9wIGJvYXJkIHNoaXBzXG4gICAgICAgICAgICBpZiAoY3B1QWN0aXZlICYmIGNvbnRlbnRFbGVtLmlkID09IFwidG9wXCIpIHtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBub2RlLmNsYXNzTGlzdC5hZGQoXCJzaGlwXCIpO1xuICAgICAgICAgICAgICBub2RlLnNldEF0dHJpYnV0ZShcImNvbG91clwiLCBvYmouY29sb3VyKTtcbiAgICAgICAgICAgICAgbm9kZS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBvYmouY29sb3VyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAob2JqLnN0YXR1cyA9PSBcImhpdFwiKSB7XG4gICAgICAgICAgICBub2RlLmNsYXNzTGlzdC5hZGQoXCJoaXRcIik7XG4gICAgICAgICAgICBub2RlLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwicmdiKDE3NSwgMTI5LCAxMjkpXCI7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChvYmouc3RhdHVzID09IFwibWlzc1wiKSB7XG4gICAgICAgICAgICBub2RlLmNsYXNzTGlzdC5hZGQoXCJtaXNzXCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFVwZGF0ZSBib2FyZCBjb29yZGluYXRlc1xuICAgIGZvciAobGV0IHggPSAxOyB4IDw9IDEwOyB4KyspIHtcbiAgICAgIGZvciAobGV0IHkgPSAxOyB5IDw9IDEwOyB5KyspIHtcbiAgICAgICAgLy8gRm9yIGVhY2ggeCAmIHkgY29vcmRpbmF0ZVxuICAgICAgICAvLyBpZiAob2JqLmRhdGFbeF1beV0ubGVuZ3RoID4gMSkge1xuICAgICAgICAvLyBJZiB0aGVyZSBpcyBhIGhpdC9taXNzIG9yIHNoaXAgb2JqZWN0XG5cbiAgICAgICAgdXBkYXRlQ29vcmRpbmF0ZShvYmouZ3JpZFt4XVt5XSwgeCwgeSk7XG4gICAgICAgIC8vIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBTd2l0Y2ggYWN0aXZlIGJvYXJkIHN0YXRlXG4gICAgc3dpdGNoQWN0aXZlQm9hcmQoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHN3aXRjaEhpZGRlbkJvYXJkKCkge1xuICAgIC8vIElmIHB2cCBtb2RlIHRoZW4gaGlkZSBzaGlwcyBvbiBib2FyZCwgZGlzYWJsZSBhbGwgaW5wdXRcbiAgICBjb25zdCB0b3BCb2FyZFNoaXBzID0gQXJyYXkuZnJvbSh0b3BCb2FyZC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwic2hpcFwiKSk7XG4gICAgY29uc3QgYm90Qm9hcmRTaGlwcyA9IEFycmF5LmZyb20oYm90Qm9hcmQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInNoaXBcIikpO1xuICAgIHRvcEJvYXJkLnN0eWxlLnBvaW50ZXJFdmVudHMgPSBcIm5vbmVcIjtcbiAgICBib3RCb2FyZC5zdHlsZS5wb2ludGVyRXZlbnRzID0gXCJub25lXCI7XG5cbiAgICAvLyBUZW1wIGhpZGUgc2hpcHNcbiAgICB0b3BCb2FyZFNoaXBzLmZvckVhY2goKHNoaXApID0+IHtcbiAgICAgIGlmICghc2hpcC5jbGFzc0xpc3QuY29udGFpbnMoXCJoaXRcIikpIHtcbiAgICAgICAgc2hpcC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcIndoaXRlXCI7XG4gICAgICB9IGVsc2UgaWYgKHNoaXAuY2xhc3NMaXN0LmNvbnRhaW5zKFwiaGl0XCIpKSB7XG4gICAgICAgIHNoaXAuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJyZ2IoMTc1LCAxMjksIDEyOSlcIjtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBib3RCb2FyZFNoaXBzLmZvckVhY2goKHNoaXApID0+IHtcbiAgICAgIGlmICghc2hpcC5jbGFzc0xpc3QuY29udGFpbnMoXCJoaXRcIikpIHtcbiAgICAgICAgc2hpcC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcIndoaXRlXCI7XG4gICAgICB9IGVsc2UgaWYgKHNoaXAuY2xhc3NMaXN0LmNvbnRhaW5zKFwiaGl0XCIpKSB7XG4gICAgICAgIHNoaXAuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJyZ2IoMTc1LCAxMjksIDEyOSlcIjtcbiAgICAgIH1cbiAgICB9KTtcbiAgICAvLyBXYWl0IDIgc2Vjb25kcyB0aGVuIGRpc3BsYXkgc2hpcCBzdGF0dXNcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGlmIChib3RCb2FyZHNUdXJuKSB7XG4gICAgICAgIC8vIFRvcCBib2FyZCdzIHR1cm5cbiAgICAgICAgdG9wQm9hcmRTaGlwcy5mb3JFYWNoKChzaGlwKSA9PiB7XG4gICAgICAgICAgY29uc3Qgc2hpcENvbG91ciA9IHNoaXAuZ2V0QXR0cmlidXRlKFwiY29sb3VyXCIpO1xuICAgICAgICAgIGlmICghc2hpcC5jbGFzc0xpc3QuY29udGFpbnMoXCJoaXRcIikpIHtcbiAgICAgICAgICAgIHNoaXAuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gc2hpcENvbG91cjtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBib3RCb2FyZFNoaXBzLmZvckVhY2goKHNoaXApID0+IHtcbiAgICAgICAgICBpZiAoIXNoaXAuY2xhc3NMaXN0LmNvbnRhaW5zKFwiaGl0XCIpKSB7XG4gICAgICAgICAgICBzaGlwLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwid2hpdGVcIjtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmICh0b3BCb2FyZHNUdXJuKSB7XG4gICAgICAgIC8vIEJvdHRvbSBib2FyZCdzIHR1cm5cbiAgICAgICAgdG9wQm9hcmRTaGlwcy5mb3JFYWNoKChzaGlwKSA9PiB7XG4gICAgICAgICAgaWYgKCFzaGlwLmNsYXNzTGlzdC5jb250YWlucyhcImhpdFwiKSkge1xuICAgICAgICAgICAgc2hpcC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcIndoaXRlXCI7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgYm90Qm9hcmRTaGlwcy5mb3JFYWNoKChzaGlwKSA9PiB7XG4gICAgICAgICAgY29uc3Qgc2hpcENvbG91ciA9IHNoaXAuZ2V0QXR0cmlidXRlKFwiY29sb3VyXCIpO1xuICAgICAgICAgIGlmICghc2hpcC5jbGFzc0xpc3QuY29udGFpbnMoXCJoaXRcIikpIHtcbiAgICAgICAgICAgIHNoaXAuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gc2hpcENvbG91cjtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBpZiAoZGlzYWJsZUFsbEJvYXJkcykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHN3aXRjaFBsYXllckNvbnRyb2woKTtcbiAgICB9LCAyMDAwKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHN3aXRjaFBsYXllckNvbnRyb2woKSB7XG4gICAgLy8gU3dpdGNoIHBsYXllciBjb250cm9sXG4gICAgaWYgKGJvdEJvYXJkc1R1cm4pIHtcbiAgICAgIC8vIFRvcCBib2FyZHMgdHVyblxuICAgICAgdG9wQm9hcmQuc3R5bGUucG9pbnRlckV2ZW50cyA9IFwibm9uZVwiO1xuICAgICAgYm90Qm9hcmQuc3R5bGUucG9pbnRlckV2ZW50cyA9IFwiYXV0b1wiO1xuICAgICAgaWYgKGNwdUFjdGl2ZSkge1xuICAgICAgICBwcy5wdWJsaXNoKFwiaW5mby11cGRhdGVcIiwgYENQVSdzIHR1cm5gKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBzLnB1Ymxpc2goXCJpbmZvLXVwZGF0ZVwiLCBgVG9wIFBsYXllcidzIHR1cm5gKTtcbiAgICAgIH1cblxuICAgICAgLy8gU2V0IHR1cm4gdmFyaWFibGVzIGZvciBuZXh0IHR1cm5cbiAgICAgIHRvcEJvYXJkc1R1cm4gPSB0cnVlO1xuICAgICAgYm90Qm9hcmRzVHVybiA9IGZhbHNlO1xuICAgIH0gZWxzZSBpZiAodG9wQm9hcmRzVHVybikge1xuICAgICAgdG9wQm9hcmQuc3R5bGUucG9pbnRlckV2ZW50cyA9IFwiYXV0b1wiO1xuICAgICAgYm90Qm9hcmQuc3R5bGUucG9pbnRlckV2ZW50cyA9IFwibm9uZVwiO1xuICAgICAgaWYgKGNwdUFjdGl2ZSkge1xuICAgICAgICBwcy5wdWJsaXNoKFwiaW5mby11cGRhdGVcIiwgYFlvdXIgdHVybmApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHMucHVibGlzaChcImluZm8tdXBkYXRlXCIsIGBCb3R0b20gUGxheWVyJ3MgdHVybmApO1xuICAgICAgfVxuXG4gICAgICAvLyBTZXQgdHVybiB2YXJpYWJsZXMgZm9yIG5leHQgdHVyblxuICAgICAgdG9wQm9hcmRzVHVybiA9IGZhbHNlO1xuICAgICAgYm90Qm9hcmRzVHVybiA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gc3dpdGNoQWN0aXZlQm9hcmQoKSB7XG4gICAgLy8gU3dpdGNoIGFjdGl2ZSBib2FyZHNcbiAgICBpZiAoZGlzYWJsZUFsbEJvYXJkcykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIElmIHB2cCBtb2RlIGVuYWJsZWRcbiAgICBpZiAoIWNwdUFjdGl2ZSkge1xuICAgICAgc3dpdGNoSGlkZGVuQm9hcmQoKTtcbiAgICB9XG5cbiAgICAvLyBJZiBBSSBhY3RpdmUgdGhlbiBhdHRhY2tcbiAgICBpZiAoY3B1QWN0aXZlKSB7XG4gICAgICBzd2l0Y2hQbGF5ZXJDb250cm9sKCk7XG4gICAgICBpZiAocGxheWVyTW92ZWQpIHtcbiAgICAgICAgc2V0VGltZW91dChjcHVBdHRhY2ssIDgwMCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gZGlzYWJsZUJvYXJkcygpIHtcbiAgICAvLyBHYW1lIGVuZFxuICAgIGRpc2FibGVBbGxCb2FyZHMgPSB0cnVlO1xuICAgIHRvcEJvYXJkLnN0eWxlLnBvaW50ZXJFdmVudHMgPSBcIm5vbmVcIjtcbiAgICBib3RCb2FyZC5zdHlsZS5wb2ludGVyRXZlbnRzID0gXCJub25lXCI7XG4gIH1cblxuICBmdW5jdGlvbiByZXNldEJvYXJkKCkge1xuICAgIC8vIENsZWFyIGJvdGggYm9hcmRzIGZyb20gY29udGFpbmVyXG4gICAgd2hpbGUgKGJvYXJkRGl2LmZpcnN0Q2hpbGQpIHtcbiAgICAgIGJvYXJkRGl2LnJlbW92ZUNoaWxkKGJvYXJkRGl2Lmxhc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgdG9wQm9hcmQgPSBnZW5lcmF0ZUJvYXJkKFwidG9wXCIpO1xuICAgIGJvdEJvYXJkID0gZ2VuZXJhdGVCb2FyZChcImJvdFwiKTtcblxuICAgIGJvYXJkRGl2LmFwcGVuZENoaWxkKHRvcEJvYXJkKTtcbiAgICBib2FyZERpdi5hcHBlbmRDaGlsZChib3RCb2FyZCk7XG4gIH1cblxuICAvLyBBSSBNb3ZlXG4gIGZ1bmN0aW9uIGNwdUF0dGFjaygpIHtcbiAgICAvLyBDaGVjayBpZiBnYW1lIGhhcyBlbmRlZFxuICAgIGlmIChkaXNhYmxlQWxsQm9hcmRzKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gUGFzcyB0dXJuIGJhY2sgdG8gcGxheWVyIGFuZCBhdHRhY2tcbiAgICBwbGF5ZXJNb3ZlZCA9IGZhbHNlO1xuICAgIHBzLnB1Ymxpc2goXCJjcHUtYXR0YWNrXCIsIFwiYm90XCIpO1xuICB9XG5cbiAgLy8gTW91c2UgZXZlbnRzXG4gIGJvYXJkRGl2LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xuICAgIGNvbnN0IHBhcmVudEJvYXJkID0gZS50YXJnZXQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50O1xuICAgIGlmIChwYXJlbnRCb2FyZC5pZCA9PSBcInRvcFwiKSB7XG4gICAgICBjb25zdCBkYXRhWCA9IE51bWJlcihlLnRhcmdldC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXhcIikpO1xuICAgICAgY29uc3QgZGF0YVkgPSBOdW1iZXIoZS50YXJnZXQuZ2V0QXR0cmlidXRlKFwiZGF0YS15XCIpKTtcbiAgICAgIGNvbnN0IGNvb3JkaW5hdGVzID0geyBvd25lcjogXCJ0b3BcIiwgeDogZGF0YVgsIHk6IGRhdGFZIH07XG5cbiAgICAgIC8vIFBsYXllciBoYXMgbW92ZWQgKEFJIGNoZWNrKVxuICAgICAgcGxheWVyTW92ZWQgPSB0cnVlO1xuICAgICAgcHMucHVibGlzaChcImF0dGFjay1ncmlkXCIsIGNvb3JkaW5hdGVzKTtcbiAgICB9XG4gICAgLy8gRGlzYWJsZSBjaGVja2luZyBib3QgYm9hcmQgaWYgQUkgYWN0aXZlXG4gICAgaWYgKHBhcmVudEJvYXJkLmlkID09IFwiYm90XCIgJiYgY3B1QWN0aXZlID09IGZhbHNlKSB7XG4gICAgICBjb25zdCBkYXRhWCA9IE51bWJlcihlLnRhcmdldC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXhcIikpO1xuICAgICAgY29uc3QgZGF0YVkgPSBOdW1iZXIoZS50YXJnZXQuZ2V0QXR0cmlidXRlKFwiZGF0YS15XCIpKTtcbiAgICAgIGNvbnN0IGNvb3JkaW5hdGVzID0geyBvd25lcjogXCJib3RcIiwgeDogZGF0YVgsIHk6IGRhdGFZIH07XG5cbiAgICAgIHBzLnB1Ymxpc2goXCJhdHRhY2stZ3JpZFwiLCBjb29yZGluYXRlcyk7XG4gICAgfVxuICB9KTtcblxuICBmdW5jdGlvbiBzdGFydEdhbWUoKSB7XG4gICAgZGlzYWJsZUFsbEJvYXJkcyA9IGZhbHNlO1xuICAgIHBsYXllck1vdmVkID0gZmFsc2U7XG4gICAgdG9wQm9hcmRzVHVybiA9IGZhbHNlO1xuICAgIGJvdEJvYXJkc1R1cm4gPSB0cnVlO1xuICAgIC8vIGNsZWFyIGJvYXJkIHN0YXR1cyBhbmQgcmVidWlsZCBzaGlwc1xuICAgIHJlc2V0Qm9hcmQoKTtcbiAgfVxuXG4gIGRpc2FibGVCb2FyZHMoKTtcbiAgcHMuc3Vic2NyaWJlKFwidXBkYXRlLWJvYXJkXCIsIHVwZGF0ZUJvYXJkKTtcbiAgcHMuc3Vic2NyaWJlKFwiZ2FtZS1vdmVyXCIsIGRpc2FibGVCb2FyZHMpO1xuICBwcy5zdWJzY3JpYmUoXCJuZXctZ2FtZVwiLCBzdGFydEdhbWUpO1xuICBwcy5zdWJzY3JpYmUoXCJjbGVhci1ib2FyZFwiLCByZXNldEJvYXJkKTtcbiAgcHMuc3Vic2NyaWJlKFwiY3B1LW9uXCIsICgpID0+IHtcbiAgICBjcHVBY3RpdmUgPSB0cnVlO1xuICB9KTtcbiAgcHMuc3Vic2NyaWJlKFwiY3B1LW9mZlwiLCAoKSA9PiB7XG4gICAgY3B1QWN0aXZlID0gZmFsc2U7XG4gIH0pO1xufVxuIiwiZnVuY3Rpb24gcHViU3ViKCkge1xuICBjb25zdCBzdWJzY3JpYmVycyA9IHt9O1xuXG4gIGZ1bmN0aW9uIHB1Ymxpc2goZXZlbnROYW1lLCBkYXRhKSB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHN1YnNjcmliZXJzW2V2ZW50TmFtZV0pKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHN1YnNjcmliZXJzW2V2ZW50TmFtZV0uZm9yRWFjaCgoY2FsbGJhY2spID0+IHtcbiAgICAgIGNhbGxiYWNrKGRhdGEpO1xuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIHN1YnNjcmliZShldmVudE5hbWUsIGNhbGxiYWNrKSB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHN1YnNjcmliZXJzW2V2ZW50TmFtZV0pKSB7XG4gICAgICBzdWJzY3JpYmVyc1tldmVudE5hbWVdID0gW107XG4gICAgfVxuICAgIHN1YnNjcmliZXJzW2V2ZW50TmFtZV0ucHVzaChjYWxsYmFjayk7XG4gICAgY29uc3QgaW5kZXggPSBzdWJzY3JpYmVyc1tldmVudE5hbWVdLmxlbmd0aCAtIDE7XG5cbiAgICByZXR1cm4ge1xuICAgICAgdW5zdWJzY3JpYmUoKSB7XG4gICAgICAgIHN1YnNjcmliZXJzW2V2ZW50TmFtZV0uc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxuICByZXR1cm4geyBwdWJsaXNoLCBzdWJzY3JpYmUgfTtcbn1cblxuY29uc3Qgc2hhcmVkUHViU3ViID0gcHViU3ViKCk7XG5leHBvcnQgZGVmYXVsdCBzaGFyZWRQdWJTdWI7XG4iLCJpbXBvcnQgcHMgZnJvbSBcIi4vcHViU3ViXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHN0YXRCb2FyZCgpIHtcbiAgLy8gSW5pdGlhbCB2YXJpYWJsZXNcbiAgbGV0IHRvcFBsYXllck5hbWUgPSBcIlRvcCBwbGF5ZXJcIjtcbiAgbGV0IGJvdFBsYXllck5hbWUgPSBcIkJvdHRvbSBwbGF5ZXJcIjtcbiAgbGV0IHRvcFBsYXllclNjb3JlID0gMDtcbiAgbGV0IGJvdFBsYXllclNjb3JlID0gMDtcblxuICAvLyBNYWluIGNvbnRhaW5lclxuICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwic3RhdHMtY29udGFpbmVyXCIpWzBdO1xuXG4gIC8vIFBsYXllciBzdGF0cyBjb250YWluZXJcbiAgY29uc3QgcGxheWVyQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgcGxheWVyQ29udGFpbmVyLnNldEF0dHJpYnV0ZShcImlkXCIsIFwicGxheWVyLXNjb3Jlcy1kaXZcIik7XG5cbiAgY29uc3QgcGxheWVyc0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIHBsYXllcnNEaXYuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJwbGF5ZXJzLWRpdlwiKTtcblxuICBjb25zdCB0b3BQbGF5ZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgdG9wUGxheWVyLnNldEF0dHJpYnV0ZShcImlkXCIsIFwidG9wLXBsYXllclwiKTtcbiAgdG9wUGxheWVyLnRleHRDb250ZW50ID0gYCR7dG9wUGxheWVyTmFtZX06ICR7dG9wUGxheWVyU2NvcmV9YDtcblxuICBjb25zdCBib3RQbGF5ZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgYm90UGxheWVyLnNldEF0dHJpYnV0ZShcImlkXCIsIFwiYm90LXBsYXllclwiKTtcbiAgYm90UGxheWVyLnRleHRDb250ZW50ID0gYCR7Ym90UGxheWVyTmFtZX06ICR7Ym90UGxheWVyU2NvcmV9YDtcblxuICBwbGF5ZXJzRGl2LmFwcGVuZENoaWxkKHRvcFBsYXllcik7XG4gIHBsYXllcnNEaXYuYXBwZW5kQ2hpbGQoYm90UGxheWVyKTtcbiAgcGxheWVyQ29udGFpbmVyLmFwcGVuZENoaWxkKHBsYXllcnNEaXYpO1xuICBjb250YWluZXIuYXBwZW5kQ2hpbGQocGxheWVyQ29udGFpbmVyKTtcblxuICAvLyBNb2RlIHNlbGVjdCBjb250YWluZXJcbiAgY29uc3QgbW9kZURpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIG1vZGVEaXYuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJtb2RlLXNlbGVjdC1kaXZcIik7XG5cbiAgLy8gTW9kZSBzZWxlY3QgcXVlc3Rpb25cbiAgY29uc3QgcXVlc3Rpb25EaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBxdWVzdGlvbkRpdi5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInF1ZXN0aW9uLWRpdlwiKTtcbiAgY29uc3QgcXVlc3Rpb25UZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gIHF1ZXN0aW9uVGV4dC50ZXh0Q29udGVudCA9IFwiVmVyc2UgQ1BVP1wiO1xuICBxdWVzdGlvbkRpdi5hcHBlbmRDaGlsZChxdWVzdGlvblRleHQpO1xuXG4gIC8vIE1vZGUgc2VsZWN0IGJ1dHRvbnNcbiAgY29uc3QgYnRuQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgYnRuQ29udGFpbmVyLnNldEF0dHJpYnV0ZShcImlkXCIsIFwiYnRuLWNvbnRhaW5lclwiKTtcbiAgY29uc3QgeWVzQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgeWVzQnRuLnNldEF0dHJpYnV0ZShcImlkXCIsIFwieWVzLWJ0blwiKTtcbiAgeWVzQnRuLnRleHRDb250ZW50ID0gXCJZZXNcIjtcbiAgY29uc3Qgbm9CdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICBub0J0bi5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcIm5vLWJ0blwiKTtcbiAgbm9CdG4udGV4dENvbnRlbnQgPSBcIk5vXCI7XG5cbiAgbW9kZURpdi5hcHBlbmRDaGlsZChxdWVzdGlvbkRpdik7XG4gIGJ0bkNvbnRhaW5lci5hcHBlbmRDaGlsZCh5ZXNCdG4pO1xuICBidG5Db250YWluZXIuYXBwZW5kQ2hpbGQobm9CdG4pO1xuICBtb2RlRGl2LmFwcGVuZENoaWxkKGJ0bkNvbnRhaW5lcik7XG4gIGNvbnRhaW5lci5hcHBlbmRDaGlsZChtb2RlRGl2KTtcblxuICAvLyBQbGF5ZXIgY29udGFpbmVyIGJ1dHRvbnNcbiAgY29uc3QgcGxheWVyQ29udGFpbmVyQnRucyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIHBsYXllckNvbnRhaW5lckJ0bnMuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJwbGF5ZXItY29udGFpbmVyLWJ0bnNcIik7XG4gIHBsYXllckNvbnRhaW5lci5hcHBlbmRDaGlsZChwbGF5ZXJDb250YWluZXJCdG5zKTtcblxuICAvLyBTdGFydCBidXR0b25cbiAgY29uc3Qgc3RhcnRCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICBzdGFydEJ0bi50ZXh0Q29udGVudCA9IFwiTmV3IEdhbWVcIjtcbiAgc3RhcnRCdG4uc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJzdGFydC1idG5cIik7XG4gIHN0YXJ0QnRuLmRpc2FibGVkID0gdHJ1ZTtcbiAgcGxheWVyQ29udGFpbmVyQnRucy5hcHBlbmRDaGlsZChzdGFydEJ0bik7XG5cbiAgLy8gUmVzZXQgYnV0dG9uXG4gIGNvbnN0IHJlc2V0QnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgcmVzZXRCdG4uc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJyZXNldC1idG5cIik7XG4gIHJlc2V0QnRuLnRleHRDb250ZW50ID0gXCJSZXNldFwiO1xuICBwbGF5ZXJDb250YWluZXJCdG5zLmFwcGVuZENoaWxkKHJlc2V0QnRuKTtcblxuICAvLyBUdXJuL3ZpY3Rvcnkgbm90aWZpY2F0aW9uXG4gIGNvbnN0IGluZm9EaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBpbmZvRGl2LnNldEF0dHJpYnV0ZShcImlkXCIsIFwiaW5mby1kaXZcIik7XG4gIHBsYXllckNvbnRhaW5lci5hcHBlbmRDaGlsZChpbmZvRGl2KTtcblxuICBjb25zdCBpbmZvVGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICBpbmZvVGV4dC50ZXh0Q29udGVudCA9IFwiXCI7XG4gIGluZm9EaXYuYXBwZW5kQ2hpbGQoaW5mb1RleHQpO1xuXG4gIGZ1bmN0aW9uIHVwZGF0ZUluZm9UZXh0KHRleHQpIHtcbiAgICAvLyBMb3NlciBCb2FyZCBpbmZvXG4gICAgaWYgKHRleHQgPT0gXCJ0b3BcIikge1xuICAgICAgaW5mb1RleHQudGV4dENvbnRlbnQgPSBgJHtib3RQbGF5ZXJOYW1lfSB3b24hYDtcbiAgICB9IGVsc2UgaWYgKHRleHQgPT0gXCJib3RcIikge1xuICAgICAgaW5mb1RleHQudGV4dENvbnRlbnQgPSBgJHt0b3BQbGF5ZXJOYW1lfSB3b24hYDtcbiAgICB9IGVsc2Uge1xuICAgICAgaW5mb1RleHQudGV4dENvbnRlbnQgPSB0ZXh0O1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHVwZGF0ZVNjb3Jlcyhsb3NlckJvYXJkKSB7XG4gICAgLy8gVXBkYXRlIHNjb3Jlc1xuICAgIGlmIChsb3NlckJvYXJkID09IFwidG9wXCIpIHtcbiAgICAgIGJvdFBsYXllclNjb3JlICs9IDE7XG4gICAgICBib3RQbGF5ZXIudGV4dENvbnRlbnQgPSBgJHtib3RQbGF5ZXJOYW1lfTogJHtib3RQbGF5ZXJTY29yZX1gO1xuICAgIH0gZWxzZSB7XG4gICAgICB0b3BQbGF5ZXJTY29yZSArPSAxO1xuICAgICAgdG9wUGxheWVyLnRleHRDb250ZW50ID0gYCR7dG9wUGxheWVyTmFtZX06ICR7dG9wUGxheWVyU2NvcmV9YDtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXNldFNjb3JlcygpIHtcbiAgICAvLyBSZXNldCBzY29yZXMgYW5kIHVwZGF0ZSBib2FyZFxuICAgIHRvcFBsYXllclNjb3JlID0gMDtcbiAgICBib3RQbGF5ZXJTY29yZSA9IDA7XG5cbiAgICB0b3BQbGF5ZXIudGV4dENvbnRlbnQgPSBgJHt0b3BQbGF5ZXJOYW1lfTogJHt0b3BQbGF5ZXJTY29yZX1gO1xuICAgIGJvdFBsYXllci50ZXh0Q29udGVudCA9IGAke2JvdFBsYXllck5hbWV9OiAke2JvdFBsYXllclNjb3JlfWA7XG4gIH1cblxuICBmdW5jdGlvbiBlbmFibGVCdG5zKCkge1xuICAgIHN0YXJ0QnRuLmRpc2FibGVkID0gZmFsc2U7XG4gIH1cblxuICBmdW5jdGlvbiBnYW1lT3ZlckNsZWFuVXAobG9zZXJCb2FyZCkge1xuICAgIHVwZGF0ZUluZm9UZXh0KGxvc2VyQm9hcmQpO1xuICAgIHVwZGF0ZVNjb3Jlcyhsb3NlckJvYXJkKTtcbiAgICBlbmFibGVCdG5zKCk7XG4gIH1cblxuICBmdW5jdGlvbiBzaG93TW9kZURpdigpIHtcbiAgICBtb2RlRGl2LnN0eWxlLm9wYWNpdHkgPSAxO1xuICAgIG1vZGVEaXYuc3R5bGUucG9pbnRlckV2ZW50cyA9IFwiYXV0b1wiO1xuICB9XG5cbiAgZnVuY3Rpb24gaGlkZU1vZGVEaXYoKSB7XG4gICAgbW9kZURpdi5zdHlsZS5vcGFjaXR5ID0gMDtcbiAgICBtb2RlRGl2LnN0eWxlLnBvaW50ZXJFdmVudHMgPSBcIm5vbmVcIjtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNob3dQbGF5ZXJTY29yZURpdigpIHtcbiAgICBwbGF5ZXJDb250YWluZXIuc3R5bGUub3BhY2l0eSA9IDE7XG4gICAgcGxheWVyQ29udGFpbmVyLnN0eWxlLnBvaW50ZXJFdmVudHMgPSBcImF1dG9cIjtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhpZGVQbGF5ZXJTY29yZURpdigpIHtcbiAgICBwbGF5ZXJDb250YWluZXIuc3R5bGUub3BhY2l0eSA9IDA7XG4gICAgcGxheWVyQ29udGFpbmVyLnN0eWxlLnBvaW50ZXJFdmVudHMgPSBcIm5vbmVcIjtcbiAgfVxuXG4gIC8vIEV2ZW50IGxpc3RlbmVyc1xuICBzdGFydEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIHN0YXJ0QnRuLmRpc2FibGVkID0gdHJ1ZTtcbiAgICBwcy5wdWJsaXNoKFwibmV3LWdhbWVcIik7XG4gIH0pO1xuXG4gIHllc0J0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIC8vIFN3aXRjaCBidXR0b24gZGlzYWJsZWQgc3RhdGVzXG4gICAgcHMucHVibGlzaChcImNwdS1vblwiKTtcbiAgICB0b3BQbGF5ZXJOYW1lID0gXCJDUFVcIjtcbiAgICBib3RQbGF5ZXJOYW1lID0gXCJQbGF5ZXJcIjtcbiAgICBoaWRlTW9kZURpdigpO1xuICAgIHJlc2V0U2NvcmVzKCk7XG4gICAgc2hvd1BsYXllclNjb3JlRGl2KCk7XG5cbiAgICB5ZXNCdG4uZGlzYWJsZWQgPSB0cnVlO1xuICAgIG5vQnRuLmRpc2FibGVkID0gdHJ1ZTtcbiAgICBzdGFydEJ0bi5kaXNhYmxlZCA9IGZhbHNlO1xuICB9KTtcblxuICBub0J0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIC8vIFN3aXRjaCBidXR0b24gZGlzYWJsZWQgc3RhdGVzXG4gICAgcHMucHVibGlzaChcImNwdS1vZmZcIik7XG4gICAgdG9wUGxheWVyTmFtZSA9IFwiVG9wIFBsYXllclwiO1xuICAgIGJvdFBsYXllck5hbWUgPSBcIkJvdHRvbSBQbGF5ZXJcIjtcbiAgICBoaWRlTW9kZURpdigpO1xuICAgIHJlc2V0U2NvcmVzKCk7XG4gICAgc2hvd1BsYXllclNjb3JlRGl2KCk7XG4gICAgeWVzQnRuLmRpc2FibGVkID0gdHJ1ZTtcbiAgICBub0J0bi5kaXNhYmxlZCA9IHRydWU7XG4gICAgc3RhcnRCdG4uZGlzYWJsZWQgPSBmYWxzZTtcbiAgfSk7XG5cbiAgcmVzZXRCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAvLyBSZXNldCBzdGF0c1xuICAgIGhpZGVQbGF5ZXJTY29yZURpdigpO1xuICAgIHNob3dNb2RlRGl2KCk7XG4gICAgcmVzZXRTY29yZXMoKTtcblxuICAgIC8vIFN3aXRjaCBidXR0b24gZGlzYWJsZWQgc3RhdGVzXG4gICAgcHMucHVibGlzaChcImNwdS1vZmZcIik7XG4gICAgcHMucHVibGlzaChcImNsZWFyLWJvYXJkXCIpO1xuICAgIGluZm9UZXh0LnRleHRDb250ZW50ID0gXCJcIjtcbiAgICBzdGFydEJ0bi5kaXNhYmxlZCA9IHRydWU7XG4gICAgeWVzQnRuLmRpc2FibGVkID0gZmFsc2U7XG4gICAgbm9CdG4uZGlzYWJsZWQgPSBmYWxzZTtcbiAgfSk7XG5cbiAgLy8gUHVic3ViXG4gIHBzLnN1YnNjcmliZShcImdhbWUtb3ZlclwiLCBnYW1lT3ZlckNsZWFuVXApO1xuICBwcy5zdWJzY3JpYmUoXCJpbmZvLXVwZGF0ZVwiLCB1cGRhdGVJbmZvVGV4dCk7XG5cbiAgLy8gSGlkZSBwbGF5ZXIgc2NvcmUgZGl2IG9uIGluaXRcbiAgaGlkZVBsYXllclNjb3JlRGl2KCk7XG5cbiAgcmV0dXJuIGNvbnRhaW5lcjtcbn1cbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBcIi4vc3R5bGUuY3NzXCI7XG5pbXBvcnQgY3JlYXRlTGF5b3V0IGZyb20gXCIuL2dhbWVCb2FyZExheW91dFwiO1xuaW1wb3J0IFBsYXllciBmcm9tIFwiLi9QbGF5ZXJcIjtcbmltcG9ydCBHYW1lQm9hcmQgZnJvbSBcIi4vR2FtZUJvYXJkXCI7XG5pbXBvcnQgU2hpcCBmcm9tIFwiLi9TaGlwXCI7XG5pbXBvcnQgc3RhdEJvYXJkIGZyb20gXCIuL3N0YXRCb2FyZFwiO1xuaW1wb3J0IHBzIGZyb20gXCIuL3B1YlN1YlwiO1xuXG4vLyBDcmVhdGUgYm9hcmQgbGF5b3V0XG5zdGF0Qm9hcmQoKTtcbmNyZWF0ZUxheW91dCgpO1xuXG4vLyBDcmVhdGUgcGxheWVyc1xubGV0IGJvdFBsYXllciA9IG5ldyBQbGF5ZXIoXCJQTEFZRVIgMVwiKTtcbmxldCB0b3BQbGF5ZXIgPSBuZXcgUGxheWVyKFwiUExBWUVSIDJcIik7XG5cbi8vIEdhbWVib2FyZCBzZXR1cFxubGV0IGJvdFBsYXllckJvYXJkID0gbmV3IEdhbWVCb2FyZChib3RQbGF5ZXIsIFwiYm90XCIpO1xubGV0IHRvcFBsYXllckJvYXJkID0gbmV3IEdhbWVCb2FyZCh0b3BQbGF5ZXIsIFwidG9wXCIpO1xuXG4vLyBCb3R0b20gUGxheWVyIHNoaXBzXG5sZXQgYm90U2hpcDEgPSBuZXcgU2hpcCgpO1xubGV0IGJvdFNoaXAyID0gbmV3IFNoaXAoKTtcbmxldCBib3RTaGlwMyA9IG5ldyBTaGlwKCk7XG5sZXQgYm90U2hpcDQgPSBuZXcgU2hpcCgpO1xuXG4vLyBUb3AgcGxheWVyIHNoaXBzXG5sZXQgdG9wU2hpcDEgPSBuZXcgU2hpcCgpO1xubGV0IHRvcFNoaXAyID0gbmV3IFNoaXAoKTtcbmxldCB0b3BTaGlwMyA9IG5ldyBTaGlwKCk7XG5sZXQgdG9wU2hpcDQgPSBuZXcgU2hpcCgpO1xuXG5mdW5jdGlvbiBuZXdHYW1lKCkge1xuICAvLyBCb3R0b20gcGxheWVyIHNoaXBzXG4gIGJvdFNoaXAxID0gbnVsbDtcbiAgYm90U2hpcDIgPSBudWxsO1xuICBib3RTaGlwMyA9IG51bGw7XG4gIGJvdFNoaXA0ID0gbnVsbDtcblxuICBib3RTaGlwMSA9IG5ldyBTaGlwKDIpO1xuICBib3RTaGlwMiA9IG5ldyBTaGlwKDMpO1xuICBib3RTaGlwMyA9IG5ldyBTaGlwKDQpO1xuICBib3RTaGlwNCA9IG5ldyBTaGlwKDQpO1xuXG4gIC8vIFRvcCBwbGF5ZXIgc2hpcHNcbiAgdG9wU2hpcDEgPSBudWxsO1xuICB0b3BTaGlwMiA9IG51bGw7XG4gIHRvcFNoaXAzID0gbnVsbDtcbiAgdG9wU2hpcDQgPSBudWxsO1xuXG4gIHRvcFNoaXAxID0gbmV3IFNoaXAoMik7XG4gIHRvcFNoaXAyID0gbmV3IFNoaXAoMyk7XG4gIHRvcFNoaXAzID0gbmV3IFNoaXAoNCk7XG4gIHRvcFNoaXA0ID0gbmV3IFNoaXAoNCk7XG5cbiAgcHMucHVibGlzaChcInJlc2V0LXZhbHVlc1wiKTtcblxuICAvLyBQbGFjZSBwbGF5ZXIgc2hpcHNcbiAgYm90UGxheWVyQm9hcmQucGxhY2VTaGlwRG93bihib3RTaGlwMSk7XG4gIGJvdFBsYXllckJvYXJkLnBsYWNlU2hpcERvd24oYm90U2hpcDIpO1xuICBib3RQbGF5ZXJCb2FyZC5wbGFjZVNoaXBSaWdodChib3RTaGlwMyk7XG4gIGJvdFBsYXllckJvYXJkLnBsYWNlU2hpcFJpZ2h0KGJvdFNoaXA0KTtcblxuICAvLyBQbGFjZSBDUFUgc2hpcHNcbiAgdG9wUGxheWVyQm9hcmQucGxhY2VTaGlwRG93bih0b3BTaGlwMSk7XG4gIHRvcFBsYXllckJvYXJkLnBsYWNlU2hpcERvd24odG9wU2hpcDIpO1xuICB0b3BQbGF5ZXJCb2FyZC5wbGFjZVNoaXBSaWdodCh0b3BTaGlwMyk7XG4gIHRvcFBsYXllckJvYXJkLnBsYWNlU2hpcFJpZ2h0KHRvcFNoaXA0KTtcblxuICAvLyBVcGRhdGUgYm90aCBncmlkc1xuICBib3RQbGF5ZXJCb2FyZC51cGRhdGVHcmlkKFwiYm90XCIpO1xuICB0b3BQbGF5ZXJCb2FyZC51cGRhdGVHcmlkKFwidG9wXCIpO1xufVxuXG5wcy5zdWJzY3JpYmUoXCJuZXctZ2FtZVwiLCBuZXdHYW1lKTtcbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIkdhbWVCb2FyZCIsImNvbnN0cnVjdG9yIiwib3duZXIiLCJib2FyZFBvc2l0aW9uIiwiZ3JpZCIsImluaXRHcmlkIiwid2lkdGgiLCJzdW5rU2hpcHMiLCJzaGlwU2V0IiwiU2V0IiwidG90YWxTaGlwcyIsInNlbGVjdGVkTW92ZXMiLCJhZGphY2VudENvb3JkIiwic3Vic2NyaWJlIiwicmVjZWl2ZUF0dGFjayIsInJlc2V0VmFsdWVzIiwiY3B1QXR0YWNrIiwieCIsInkiLCJnZW5lcmF0ZUNvb3JkcyIsIm51bVgiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJudW1ZIiwiYWJzRGlmZmVyZW5jZSIsImFicyIsImNvb3JkaW5hdGVzIiwicGxhY2VTaGlwRG93biIsInNoaXAiLCJvdmVybGFwIiwibmV3WCIsImFkZCIsInBsYWNlU2hpcFJpZ2h0IiwibmV3WSIsImNvb3JkIiwic3RhdHVzIiwiT2JqZWN0IiwidmFsdWVzIiwiaGl0IiwiaXNTdW5rIiwiZ3JpZE9iaiIsInVwZGF0ZUdyaWQiLCJjaGVja1BsYXllclNoaXBzIiwiZm9yRWFjaCIsInN1bmsiLCJoaXRzIiwiZGVsZXRlIiwicHVibGlzaCIsImVsZW0iLCJjcHVNb3ZlIiwicmV0dXJuTW92ZSIsImRlY2lkZWRNb3ZlIiwiY2hlY2tlZEFkamFjZW50TW92ZXMiLCJjaGVja0FkamFjZW50Q29vcmQiLCJ0ZW1wQ29vcmQiLCJjaGVja01vdmVzIiwicmFuZG9tQ29vcmQiLCJjb29yZFgiLCJjb29yZFkiLCJuZXdNb3ZlIiwibW92ZSIsInNpemUiLCJib2FyZENoZWNrIiwiUGxheWVyIiwibmFtZSIsIlNoaXAiLCJjb2xvdXIiLCJjcmVhdGVCb2FyZCIsImJvYXJkRGl2IiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsInRvcEJvYXJkIiwiZ2VuZXJhdGVCb2FyZCIsImJvdEJvYXJkIiwiZGlzYWJsZUFsbEJvYXJkcyIsInBsYXllck1vdmVkIiwiY3B1QWN0aXZlIiwidG9wQm9hcmRzVHVybiIsImJvdEJvYXJkc1R1cm4iLCJjb250YWluZXIiLCJib2FyZCIsInNxdWFyZSIsImxldHRlcnMiLCJsZWZ0TGFiZWwiLCJsZXR0ZXIiLCJ0ZXh0Q29udGVudCIsInRvcExhYmVsIiwibnVtYmVyIiwic3dpdGNoUGxheWVyQ29udHJvbCIsInBvaW50ZXJFdmVudHMiLCJkaXNhYmxlQm9hcmRzIiwicmVzZXRCb2FyZCIsImxhc3RDaGlsZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJwYXJlbnRCb2FyZCIsInBhcmVudEVsZW1lbnQiLCJOdW1iZXIiLCJnZXRBdHRyaWJ1dGUiLCJjb250ZW50RWxlbSIsImdldEVsZW1lbnRCeUlkIiwiYm9hcmRFbGVtIiwidXBkYXRlQ29vcmRpbmF0ZSIsIm5vZGUiLCJjaGlsZHJlbiIsImRhdGFYIiwiZGF0YVkiLCJjbGFzc0xpc3QiLCJiYWNrZ3JvdW5kQ29sb3IiLCJ0b3BCb2FyZFNoaXBzIiwiQXJyYXkiLCJmcm9tIiwiYm90Qm9hcmRTaGlwcyIsImNvbnRhaW5zIiwic2V0VGltZW91dCIsInNoaXBDb2xvdXIiLCJzd2l0Y2hIaWRkZW5Cb2FyZCIsInN1YnNjcmliZXJzIiwiZXZlbnROYW1lIiwiaXNBcnJheSIsImNhbGxiYWNrIiwidW5zdWJzY3JpYmUiLCJwdWJTdWIiLCJzdGF0Qm9hcmQiLCJ0b3BQbGF5ZXJOYW1lIiwiYm90UGxheWVyTmFtZSIsInRvcFBsYXllclNjb3JlIiwiYm90UGxheWVyU2NvcmUiLCJwbGF5ZXJDb250YWluZXIiLCJwbGF5ZXJzRGl2IiwidG9wUGxheWVyIiwiYm90UGxheWVyIiwibW9kZURpdiIsInF1ZXN0aW9uRGl2IiwicXVlc3Rpb25UZXh0IiwiYnRuQ29udGFpbmVyIiwieWVzQnRuIiwibm9CdG4iLCJwbGF5ZXJDb250YWluZXJCdG5zIiwic3RhcnRCdG4iLCJkaXNhYmxlZCIsInJlc2V0QnRuIiwiaW5mb0RpdiIsImluZm9UZXh0IiwidXBkYXRlSW5mb1RleHQiLCJ0ZXh0IiwicmVzZXRTY29yZXMiLCJoaWRlTW9kZURpdiIsIm9wYWNpdHkiLCJzaG93UGxheWVyU2NvcmVEaXYiLCJoaWRlUGxheWVyU2NvcmVEaXYiLCJsb3NlckJvYXJkIiwidXBkYXRlU2NvcmVzIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJuYyIsImxvY2FscyIsImJvdFBsYXllckJvYXJkIiwidG9wUGxheWVyQm9hcmQiLCJib3RTaGlwMSIsImJvdFNoaXAyIiwiYm90U2hpcDMiLCJib3RTaGlwNCIsInRvcFNoaXAxIiwidG9wU2hpcDIiLCJ0b3BTaGlwMyIsInRvcFNoaXA0Il0sInNvdXJjZVJvb3QiOiIifQ==